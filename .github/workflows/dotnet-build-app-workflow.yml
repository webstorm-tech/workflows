name: Build .NET Apps Workflow

on:
  workflow_call:
    inputs:
      artifactName:
        description: The name to be used when publishing the build artifacts
        required: true
        type: string
      dotnetVersion:
        default: 7.0.x
        description: The version of .NET to install onto the runner. Defaults to `7.0.x`.
        type: string
      semVer:
        description: The version of the application being built. It must be in semantic versioning format
        required: true
        type: string
      solutionFile:
        description: The path to the solution file to perform `dotnet build` on. Ex. `./src/MySolution.sln`
        required: true
        type: string
      testCategory:
        default: 'UnitTest'
        description: The test category or trait to use when running `dotnet test`. Deafults to `UnitTest`
        type: string
      unitTestProjectFile:
        default: ''
        description: The file name, including extension, of the project to execute tests for. If omitted, no tests will be run. Ex. `MyWebProject.Tests.csproj`.
        type: string
      unitTestProjectFolder:
        default: ''
        description: The folder path that contains the project to run tests for. If omitted, no tests will be run. Ex. `./src/MyWebProject.Tests`
        type: string
      sendToCodecov:
        default: false
        description: A boolean value indicating if the code coverage results should be sent to Codecov. Defaults to `false`.
        type: boolean
      publishProjectFile:
        description: The file name, including extension, of the project that will be published. Ex. `MyWebProject.csproj`
        required: true
        type: string
      publishProjectFolder:
        description: The folder path that contains the project that will be published. Ex. `./src/MyWebProject`
        required: true
        type: string
      runner:
        default: ubuntu-latest
        description: The runner to use when executing the workflow. Defaults to `ubuntu-latest`.
        type: string
    secrets:
      CODECOV_TOKEN:
        description: The token used by Codecov to publish code coverage results to. This is required if `unitTestProjectFile` and `unitTestProjectFolder` are provided.

jobs:
  buildApplicationJob:
    name: .NET Build and Publish Job
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnetVersion }}

      - name: Build Projects
        run: |
          dotnet build ${{ inputs.solutionFile }} \
            --configuration Release \
            --nologo \
            /p:Version=${{ inputs.semVer }}

      - name: Run Unit Tests
        if: ${{ inputs.unitTestProjectFile != '' && inputs.unitTestProjectFolder != '' }}
        run: |
          dotnet test ${{ inputs.unitTestProjectFolder }}/${{ inputs.unitTestProjectFile }} \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --filter "TestCategory=${{ inputs.testCategory }}" \
            --nologo \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover

      - name: Collect Code Coverage
        if: ${{ inputs.unitTestProjectFile != '' && inputs.unitTestProjectFolder != '' && inputs.sendToCodecov == true }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ inputs.unitTestProjectFolder }}/coverage.opencover.xml

      - name: Publish .NET Application
        run: |
          dotnet publish ${{ inputs.publishProjectFolder }}/${{ inputs.publishProjectFile }} \
            --configuration Release \
            --no-build \
            --output ${{ runner.temp }}/${{ inputs.publishProjectFolder }} \
            --nologo

      - uses: actions/upload-artifact@v3
        name: Upload Published App Artifacts
        with:
          name: ${{ inputs.artifactName }}
          path: ${{ runner.temp }}/${{ inputs.publishProjectFolder }}
          if-no-files-found: error

      - uses: actions/upload-artifact@v3
        if: ${{ inputs.unitTestProjectFile != '' && inputs.unitTestProjectFolder != '' }}
        name: Upload Code Coverage to Artifacts
        with:
          name: code-coverage
          path: ${{ inputs.unitTestProjectFolder }}/coverage.opencover.xml
          if-no-files-found: error